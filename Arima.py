# -*- coding: utf-8 -*-
"""Aula10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FAbKmAyNPv3ZT7NSdGiGdvUhvkIfbKeF
"""

!pip install pmdarima
import pandas as pd
import numpy as np
import matplotlib.pylab as plt
from datetime import datetime
from statsmodels.tsa.seasonal import seasonal_decompose
from pmdarima.arima import auto_arima

#Carregar Base de dados óbitos covid-19 no Brasil

dataset = pd.read_csv('https://api.bcb.gov.br/dados/serie/bcdata.sgs.1402/dados?formato=csv', 
                      sep=';', index_col=["data"], parse_dates=['data'])

dataset.head()

time_series = dataset['valor']

time_series['2020-01-12']

time_series['2020-01-12']

time_series['2020-01-12':'2021-01-01']

time_series[:'2020-03-31']

time_series.index.min()

time_series.index.max()

plt.plot(time_series)

time_series_mes = time_series.resample('M').sum()
plt.plot(time_series_mes)

time_series_datas = time_series['2021-05-01':'2021-05-31']
plt.plot(time_series_datas)

# Decomposição da série temporal
decomposicao = seasonal_decompose(time_series,period = 12)
tendencia = decomposicao.trend
sazonal = decomposicao.seasonal
aleatorio = decomposicao.resid

plt.plot(tendencia)

plt.plot(sazonal)

plt.plot(aleatorio)

model = auto_arima(y=time_series)
predictions = model.predict(n_periods=24)
predictions

len(time_series)

train = time_series[:524]
test = time_series[524:]

model2 = auto_arima(train, suppress_warnings=True)

test_dates = test.index
prediction = pd.DataFrame(model2.predict(n_periods=len(test)), index=test_dates)
prediction.columns = ['valor']
prediction
#prediction = pd.DataFrame(model2.predict(n_periods=len(test)),index=test.index)
#prediction.columns=['valor']

#prediction

plt.figure(figsize=(8,5))
plt.plot(train, label = 'Training')
plt.plot(test, label = 'Test')
plt.plot(prediction, label = 'Predictions')
plt.legend()